# -*- coding: utf-8 -*-

"""
    thingspaceconnectivitymanagementapilib.models.device_list_request
 
    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ) on 10/05/2016
"""
from .kv_pair import KvPair
from .device_id import DeviceId
from .base_model import BaseModel

class DeviceListRequest(BaseModel):

    """Implementation of the 'DeviceListRequest' model.

    TODO: type model description here.

    Attributes:
        account_name (string): TODO: type description here.
        current_state (string): TODO: type description here.
        custom_fields (list of KvPair): TODO: type description here.
        device_id (DeviceId): TODO: type description here.
        earliest (string): TODO: type description here.
        group_name (string): TODO: type description here.
        latest (string): TODO: type description here.
        service_plan (string): TODO: type description here.

    """

    def __init__(self, 
                 account_name = None,
                 current_state = None,
                 custom_fields = None,
                 device_id = None,
                 earliest = None,
                 group_name = None,
                 latest = None,
                 service_plan = None):
        """Constructor for the DeviceListRequest class"""
        
        # Initialize members of the class
        self.account_name = account_name
        self.current_state = current_state
        self.custom_fields = custom_fields
        self.device_id = device_id
        self.earliest = earliest
        self.group_name = group_name
        self.latest = latest
        self.service_plan = service_plan

        # Create a mapping from Model property names to API property names
        self.names = {
            "account_name" : "accountName",
            "current_state" : "currentState",
            "custom_fields" : "customFields",
            "device_id" : "deviceId",
            "earliest" : "earliest",
            "group_name" : "groupName",
            "latest" : "latest",
            "service_plan" : "servicePlan",
        }


    @classmethod
    def from_dictionary(cls, 
                        dictionary):
        """Creates an instance of this model from a dictionary
       
        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.
            
        Returns:
            object: An instance of this structure class.
            
        """
        if dictionary == None:
            return None
        else:
            # Extract variables from the dictionary
            account_name = dictionary.get("accountName")
            current_state = dictionary.get("currentState")
            custom_fields = None
            if dictionary.get("customFields") != None:
                custom_fields = list()
                for structure in dictionary.get("customFields"):
                    custom_fields.append(KvPair.from_dictionary(structure))
            device_id = DeviceId.from_dictionary(dictionary.get("deviceId")) if dictionary.get("deviceId") else None
            earliest = dictionary.get("earliest")
            group_name = dictionary.get("groupName")
            latest = dictionary.get("latest")
            service_plan = dictionary.get("servicePlan")
            # Return an object of this model
            return cls(account_name,
                       current_state,
                       custom_fields,
                       device_id,
                       earliest,
                       group_name,
                       latest,
                       service_plan)
