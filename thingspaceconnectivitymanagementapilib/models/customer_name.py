# -*- coding: utf-8 -*-

"""
    thingspaceconnectivitymanagementapilib.models.customer_name
 
    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ) on 10/05/2016
"""
from .base_model import BaseModel

class CustomerName(BaseModel):

    """Implementation of the 'CustomerName' model.

    TODO: type model description here.

    Attributes:
        first_name (string): TODO: type description here.
        last_name (string): TODO: type description here.
        middle_name (string): TODO: type description here.
        title (string): TODO: type description here.

    """

    def __init__(self, 
                 first_name = None,
                 last_name = None,
                 middle_name = None,
                 title = None):
        """Constructor for the CustomerName class"""
        
        # Initialize members of the class
        self.first_name = first_name
        self.last_name = last_name
        self.middle_name = middle_name
        self.title = title

        # Create a mapping from Model property names to API property names
        self.names = {
            "first_name" : "firstName",
            "last_name" : "lastName",
            "middle_name" : "middleName",
            "title" : "title",
        }


    @classmethod
    def from_dictionary(cls, 
                        dictionary):
        """Creates an instance of this model from a dictionary
       
        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.
            
        Returns:
            object: An instance of this structure class.
            
        """
        if dictionary == None:
            return None
        else:
            # Extract variables from the dictionary
            first_name = dictionary.get("firstName")
            last_name = dictionary.get("lastName")
            middle_name = dictionary.get("middleName")
            title = dictionary.get("title")
            # Return an object of this model
            return cls(first_name,
                       last_name,
                       middle_name,
                       title)
