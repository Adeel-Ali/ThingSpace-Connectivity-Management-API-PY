# -*- coding: utf-8 -*-

"""
    thingspaceconnectivitymanagementapilib.models.address
 
    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ) on 10/05/2016
"""
from .base_model import BaseModel

class Address(BaseModel):

    """Implementation of the 'Address' model.

    TODO: type model description here.

    Attributes:
        address_line_1 (string): TODO: type description here.
        address_line_2 (string): TODO: type description here.
        city (string): TODO: type description here.
        country (string): TODO: type description here.
        state (string): TODO: type description here.
        zip (string): TODO: type description here.

    """

    def __init__(self, 
                 address_line_1 = None,
                 address_line_2 = None,
                 city = None,
                 country = None,
                 state = None,
                 zip = None):
        """Constructor for the Address class"""
        
        # Initialize members of the class
        self.address_line_1 = address_line_1
        self.address_line_2 = address_line_2
        self.city = city
        self.country = country
        self.state = state
        self.zip = zip

        # Create a mapping from Model property names to API property names
        self.names = {
            "address_line_1" : "addressLine1",
            "address_line_2" : "addressLine2",
            "city" : "city",
            "country" : "country",
            "state" : "state",
            "zip" : "zip",
        }


    @classmethod
    def from_dictionary(cls, 
                        dictionary):
        """Creates an instance of this model from a dictionary
       
        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.
            
        Returns:
            object: An instance of this structure class.
            
        """
        if dictionary == None:
            return None
        else:
            # Extract variables from the dictionary
            address_line_1 = dictionary.get("addressLine1")
            address_line_2 = dictionary.get("addressLine2")
            city = dictionary.get("city")
            country = dictionary.get("country")
            state = dictionary.get("state")
            zip = dictionary.get("zip")
            # Return an object of this model
            return cls(address_line_1,
                       address_line_2,
                       city,
                       country,
                       state,
                       zip)
