# -*- coding: utf-8 -*-

"""
    thingspaceconnectivitymanagementapilib.models.device_usage_list_response
 
    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ) on 10/05/2016
"""
from .usage import Usage
from .base_model import BaseModel

class DeviceUsageListResponse(BaseModel):

    """Implementation of the 'DeviceUsageListResponse' model.

    TODO: type model description here.

    Attributes:
        has_more_data (bool): TODO: type description here.
        usage_history (list of Usage): TODO: type description here.

    """

    def __init__(self, 
                 has_more_data = None,
                 usage_history = None):
        """Constructor for the DeviceUsageListResponse class"""
        
        # Initialize members of the class
        self.has_more_data = has_more_data
        self.usage_history = usage_history

        # Create a mapping from Model property names to API property names
        self.names = {
            "has_more_data" : "hasMoreData",
            "usage_history" : "usageHistory",
        }


    @classmethod
    def from_dictionary(cls, 
                        dictionary):
        """Creates an instance of this model from a dictionary
       
        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.
            
        Returns:
            object: An instance of this structure class.
            
        """
        if dictionary == None:
            return None
        else:
            # Extract variables from the dictionary
            has_more_data = dictionary.get("hasMoreData")
            usage_history = None
            if dictionary.get("usageHistory") != None:
                usage_history = list()
                for structure in dictionary.get("usageHistory"):
                    usage_history.append(Usage.from_dictionary(structure))
            # Return an object of this model
            return cls(has_more_data,
                       usage_history)
